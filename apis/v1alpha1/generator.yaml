ignore:
  resource_names:
   - AccessKey
   - AccountAlias
   #- Group
   #- InstanceProfile
   - LoginProfile
   #- OpenIDConnectProvider
   #- Policy
   - PolicyVersion
   #- Role
   #- SAMLProvider
   #- ServiceLinkedRole
   - ServiceSpecificCredential
   #- User
   - VirtualMFADevice
  field_paths:
   - CreateInstanceProfileOutput.InstanceProfile.Roles
operations:
  GetGroup:
    # This is necessary because the GetGroupOutput shape has both a Group and a
    # Users field and we want to grab the Group information from the output
    # shape...
    output_wrapper_field_path: Group
resources:
  Group:
    hooks:
      sdk_read_one_post_set_output:
        template_path: hooks/group/sdk_read_one_post_set_output.go.tpl
      sdk_create_post_set_output:
        template_path: hooks/group/sdk_create_post_set_output.go.tpl
      sdk_update_pre_build_request:
        template_path: hooks/group/sdk_update_pre_build_request.go.tpl
      sdk_update_post_build_request:
        template_path: hooks/group/sdk_update_post_build_request.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/group/sdk_delete_pre_build_request.go.tpl
    exceptions:
      terminal_codes:
        - InvalidInput
        - MalformedPolicyDocument
    renames:
      operations:
        CreateGroup:
          input_fields:
            GroupName: Name
        GetGroup:
          input_fields:
            GroupName: Name
        UpdateGroup:
          input_fields:
            GroupName: Name
        DeleteGroup:
          input_fields:
            GroupName: Name
    fields:
      Path:
        late_initialize: {}
      # In order to support attaching zero or more policies to a role, we use
      # custom update code path code that uses the Attach/DetachGroupPolicy API
      # calls to manage the set of PolicyARNs attached to this Group.
      Policies:
        type: "[]*string"
        references:
          resource: Policy
          path: Status.ACKResourceMetadata.ARN
      # These are policy documents that are added to the Group using the
      # Put/DeleteGroupPolicy APIs, as compared to the Attach/DetachGroupPolicy
      # APIs that are for non-inline managed policies.
      #
      # The map key is the PolicyDocumentName and the map value is the JSON
      # policy document.
      InlinePolicies:
        type: map[string]*string
    tags:
      ignore: true
  InstanceProfile:
    renames:
      operations:
        CreateInstanceProfile:
          input_fields:
            InstanceProfileName: Name
        GetInstanceProfile:
          input_fields:
            InstanceProfileName: Name
        DeleteInstanceProfile:
          input_fields:
            InstanceProfileName: Name
    exceptions:
      terminal_codes:
        - InvalidInput
    fields:
      Path:
        late_initialize: {}
        is_immutable: true
      # In order to support attaching a role to the instance profile, custom code
      # is used to attach/detach the role to the instance profile object based on
      # the name of the role. Note that an instance profile can only contain a
      # single IAM role at a given time.
      Role:
        type: "*string"
        references:
          resource: Role
          path: Spec.Name
    hooks:
      delta_pre_compare:
        code: compareTags(delta, a, b)
      sdk_create_post_set_output:
        template_path: hooks/instance_profile/sdk_create_post_set_output.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/instance_profile/sdk_delete_pre_build_request.go.tpl
      sdk_read_one_post_set_output:
        template_path: hooks/instance_profile/sdk_read_one_post_set_output.go.tpl
    # There is no `UpdateInstanceProfile` API operation. The only way to update an
    # instance profile is to update the properties individually or to recreate
    # the profile entirely.
    update_operation:
      custom_method_name: customUpdateInstanceProfile
  Policy:
    renames:
      operations:
        CreatePolicy:
          input_fields:
            PolicyName: Name
        GetPolicy:
          input_fields:
            PolicyName: Name
        DeletePolicy:
          input_fields:
            PolicyName: Name
    hooks:
      delta_pre_compare:
        code: compareTags(delta, a, b)
      sdk_read_one_post_set_output:
        template_path: hooks/policy/sdk_read_one_post_set_output.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/policy/sdk_delete_pre_build_request.go.tpl
    update_operation:
      # There is no `UpdatePolicy` API operation. The only way to update a 
      # policy is to update the properties individually (only a few properties
      # support this) or to delete the policy and recreate it entirely. 
      #
      # This custom method will support updating the properties individually,
      # but there is currently no support for the delete/create option.
      custom_method_name: customUpdatePolicy
    exceptions:
      terminal_codes:
        - InvalidInput
        - MalformedPolicyDocument
    fields:
      Description:
        set:
        - ignore: true
          method: Create
      Path:
        late_initialize: {}
      Tags:
        compare:
          is_ignored: true
  Role:
    hooks:
      delta_pre_compare:
        code: customPreCompare(delta, a, b)
      sdk_read_one_post_set_output:
        template_path: hooks/role/sdk_read_one_post_set_output.go.tpl
      sdk_create_post_set_output:
        template_path: hooks/role/sdk_create_post_set_output.go.tpl
      sdk_update_pre_build_request:
        template_path: hooks/role/sdk_update_pre_build_request.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/role/sdk_delete_pre_build_request.go.tpl
    exceptions:
      terminal_codes:
        - InvalidInput
        - MalformedPolicyDocument
    renames:
      operations:
        CreateRole:
          input_fields:
            RoleName: Name
        GetRole:
          input_fields:
            RoleName: Name
        UpdateRole:
          input_fields:
            RoleName: Name
        DeleteRole:
          input_fields:
            RoleName: Name
    fields:
      MaxSessionDuration:
        late_initialize: {}
      PermissionsBoundary:
        references:
          resource: Policy
          path: Status.ACKResourceMetadata.ARN
        set:
          # The input and output shapes are different...
          - from: PermissionsBoundary.PermissionsBoundaryArn
      Description:
        set:
        - ignore: true
          method: Create
      Path:
        late_initialize: {}
      # In order to support attaching zero or more policies to a role, we use
      # custom update code path code that uses the Attach/DetachRolePolicy API
      # calls to manage the set of PolicyARNs attached to this Role.
      Policies:
        type: "[]*string"
        references:
          resource: Policy
          path: Status.ACKResourceMetadata.ARN
      # These are policy documents that are added to the Role using the
      # Put/DeleteRolePolicy APIs, as compared to the Attach/DetachRolePolicy
      # APIs that are for non-inline managed policies.
      #
      # The map key is the PolicyDocumentName and the map value is the JSON
      # policy document.
      InlinePolicies:
        type: map[string]*string
      AssumeRolePolicyDocument:
        compare:
          is_ignored: true
      Tags:
        compare:
          is_ignored: true
  OpenIDConnectProvider:
    hooks:
      delta_pre_compare:
        code: customPreCompare(delta, a, b)
      sdk_read_one_post_set_output:
        template_path: hooks/open_id_connect_provider/sdk_read_one_post_set_output.go.tpl
    exceptions:
      terminal_codes:
        - InvalidInput
        - EntityAlreadyExists
    renames:
      operations:
        CreateOpenIDConnectProvider:
          input_fields:
            ClientIDList: ClientIDs
            ThumbprintList: Thumbprints
        GetOpenIDConnectProvider:
          output_fields:
            ClientIDList: ClientIDs
            ThumbprintList: Thumbprints
    fields:
      URL:
        is_immutable: true
        compare:
          is_ignored: true
      Tags:
        compare:
          is_ignored: true
    update_operation:
      custom_method_name: customUpdateOpenIDConnectProvider
  SAMLProvider:
    hooks:
      sdk_create_post_set_output:
        template_path: hooks/saml_provider/sdk_create_post_set_output.go.tpl
      sdk_update_pre_build_request:
        template_path: hooks/saml_provider/sdk_update_pre_build_request.go.tpl
      sdk_read_one_post_set_output:
        template_path: hooks/saml_provider/sdk_read_one_post_set_output.go.tpl
    exceptions:
      errors:
        404:
          code: NoSuchEntityException
      terminal_codes:
        - InvalidInputException
        - EntityAlreadyExistsException
    fields:
      SAMLProviderArn:
        is_arn_primary_key: true
      Name:
        is_immutable: true
        is_primary_key: true
      CreateDate:
        is_read_only: true
      ValidUntil:
        is_read_only: true
  User:
    hooks:
      delta_pre_compare:
        code: compareTags(delta, a, b)
      sdk_read_one_post_set_output:
        template_path: hooks/user/sdk_read_one_post_set_output.go.tpl
      sdk_create_post_set_output:
        template_path: hooks/user/sdk_create_post_set_output.go.tpl
      sdk_update_pre_build_request:
        template_path: hooks/user/sdk_update_pre_build_request.go.tpl
      sdk_update_post_build_request:
        template_path: hooks/user/sdk_update_post_build_request.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/user/sdk_delete_pre_build_request.go.tpl
    exceptions:
      terminal_codes:
        - InvalidInput
    renames:
      operations:
        CreateUser:
          input_fields:
            UserName: Name
        GetUser:
          input_fields:
            UserName: Name
        UpdateUser:
          input_fields:
            UserName: Name
        DeleteUser:
          input_fields:
            UserName: Name
    fields:
      Path:
        late_initialize: {}
      PermissionsBoundary:
        references:
          resource: Policy
          path: Status.ACKResourceMetadata.ARN
        set:
          # The input and output shapes are different...
          - from: PermissionsBoundary.PermissionsBoundaryArn
      # In order to support attaching zero or more policies to a user, we use
      # custom update code path code that uses the Attach/DetachUserPolicy API
      # calls to manage the set of PolicyARNs attached to this User.
      Policies:
        type: "[]*string"
        references:
          resource: Policy
          path: Status.ACKResourceMetadata.ARN
      # These are policy documents that are added to the User using the
      # Put/DeleteUserPolicy APIs, as compared to the Attach/DetachUserPolicy
      # APIs that are for non-inline managed policies.
      #
      # The map key is the PolicyDocumentName and the map value is the JSON
      # policy document.
      InlinePolicies:
        type: map[string]*string
      Tags:
        compare:
          is_ignored: true
  ServiceLinkedRole:
    tags:
      ignore: true
    hooks:
      post_set_resource_identifiers:
        template_path: hooks/service_linked_role/post_set_resource_identifiers.go.tpl
      post_populate_resource_from_annotation:
        template_path: hooks/service_linked_role/post_populate_resource_from_annotation.go.tpl
    fields:
      AWSServiceName:
        is_immutable: true
      CustomSuffix:
        is_immutable: true
    find_operation:
      custom_method_name: customGetServiceLinkedRole
    update_operation:
      custom_method_name: customUpdateServiceLinkedRole
    exceptions:
      terminal_codes:
        - InvalidInput